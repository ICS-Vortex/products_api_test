<?phpnamespace App\Command;use App\Entity\Category;use Doctrine\ORM\EntityManagerInterface;use Exception;use Symfony\Component\Console\Attribute\AsCommand;use Symfony\Component\Console\Command\Command;use Symfony\Component\Console\Input\InputInterface;use Symfony\Component\Console\Output\OutputInterface;use Symfony\Component\Console\Style\SymfonyStyle;use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;use Symfony\Component\Filesystem\Filesystem;#[AsCommand(    name: 'category:import',    description: 'This command is used to import JSON data from categories.json file',)]class CategoryImportCommand extends Command{    private EntityManagerInterface $manager;    private ParameterBagInterface $parameterBag;    public function __construct(EntityManagerInterface $manager, ParameterBagInterface $parameterBag)    {        parent::__construct();        $this->manager = $manager;        $this->parameterBag = $parameterBag;    }    protected function execute(InputInterface $input, OutputInterface $output): int    {        $fs = new Filesystem();        $io = new SymfonyStyle($input, $output);        $path = $this->parameterBag->get('kernel.project_dir');        $file = $path . '/categories.json';        if (!$fs->exists($file)) {            $io->error("File {$file} not found");            return Command::FAILURE;        }        $content = json_decode(file_get_contents($file), true);        try {            foreach ($content as $item) {                $category = new Category();                $category->setName($item['name']);                $this->manager->persist($category);            }            $this->manager->flush();            $io->success("All categories were imported with success");            return Command::SUCCESS;        } catch (Exception $e) {            $io->error("Failed to import categories");            $io->error($e->getMessage());            $io->error($e->getTraceAsString());            return Command::FAILURE;        }    }}